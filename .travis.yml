language: java
jdk:
  - openjdk8

branches:
  only:
    - master


# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"

# deploy 명령어가 실행되기 전에 수행됩니다.
# CodeDeploy는 Jar 파일은 인삭하지 못하므로 Jar + 기타 설정 파일들을 모아 압축(zip)합니다.
before_deploy:
  - zip -r project-springboot-webservice *  #현재 위치의 모든 파일을 project-springboot-webservice 이름으로 압축 합니다
  - mkdir -p deploy # deploy라는 디렉토리를 Travis CI가 실행 중인 위치에 생성합니다. -> zip에 포함시킬 파일들을 담을 디렉토리 생성
  - mv project-springboot-webservice.zip deploy/project-springboot-webservice.zip

# S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언합니다.
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: project2-springboot-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true

                           - provider: s3
                           access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
                           secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
                           bucket: project2-springboot-build # S3 버킷
                           key: project-springboot-webservice.zip # 빌드 파일을 압축해서 전달
                           bundle_type: zip
                           application: project-springboot-webservice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
                           deployment_group: project-springboot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
                           region: ap-northeast-2
                           wait-until-deployed: true

before_install:
  - chmod +x gradlew

notifications:
  email:
    recipients:
      - kkiwon2@naver.com